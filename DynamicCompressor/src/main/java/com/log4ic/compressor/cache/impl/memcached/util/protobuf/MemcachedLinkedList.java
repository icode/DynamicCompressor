// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MemcachedLinkedList.proto

package com.log4ic.compressor.cache.impl.memcached.util.protobuf;

public final class MemcachedLinkedList {
  private MemcachedLinkedList() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MemcachedLinkedListItemOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string prevItemKey = 1;
    boolean hasPrevItemKey();
    String getPrevItemKey();
    
    // required string nextItemKey = 2;
    boolean hasNextItemKey();
    String getNextItemKey();
    
    // required .MemcachedLinkedListItemByteArray content = 3;
    boolean hasContent();
    com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray getContent();
    com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArrayOrBuilder getContentOrBuilder();
  }
  public static final class MemcachedLinkedListItem extends
      com.google.protobuf.GeneratedMessage
      implements MemcachedLinkedListItemOrBuilder {
    // Use MemcachedLinkedListItem.newBuilder() to construct.
    private MemcachedLinkedListItem(Builder builder) {
      super(builder);
    }
    private MemcachedLinkedListItem(boolean noInit) {}
    
    private static final MemcachedLinkedListItem defaultInstance;
    public static MemcachedLinkedListItem getDefaultInstance() {
      return defaultInstance;
    }
    
    public MemcachedLinkedListItem getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItem_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItem_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required string prevItemKey = 1;
    public static final int PREVITEMKEY_FIELD_NUMBER = 1;
    private java.lang.Object prevItemKey_;
    public boolean hasPrevItemKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPrevItemKey() {
      java.lang.Object ref = prevItemKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          prevItemKey_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPrevItemKeyBytes() {
      java.lang.Object ref = prevItemKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        prevItemKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string nextItemKey = 2;
    public static final int NEXTITEMKEY_FIELD_NUMBER = 2;
    private java.lang.Object nextItemKey_;
    public boolean hasNextItemKey() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNextItemKey() {
      java.lang.Object ref = nextItemKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          nextItemKey_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNextItemKeyBytes() {
      java.lang.Object ref = nextItemKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        nextItemKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required .MemcachedLinkedListItemByteArray content = 3;
    public static final int CONTENT_FIELD_NUMBER = 3;
    private com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray content_;
    public boolean hasContent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray getContent() {
      return content_;
    }
    public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArrayOrBuilder getContentOrBuilder() {
      return content_;
    }
    
    private void initFields() {
      prevItemKey_ = "";
      nextItemKey_ = "";
      content_ = com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPrevItemKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNextItemKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContent()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getContent().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPrevItemKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNextItemKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, content_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPrevItemKeyBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNextItemKeyBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, content_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItem_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItem_fieldAccessorTable;
      }
      
      // Construct using com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getContentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        prevItemKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nextItemKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (contentBuilder_ == null) {
          content_ = com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDefaultInstance();
        } else {
          contentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem.getDescriptor();
      }
      
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem getDefaultInstanceForType() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem.getDefaultInstance();
      }
      
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem build() {
        com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem buildPartial() {
        com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem result = new com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.prevItemKey_ = prevItemKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nextItemKey_ = nextItemKey_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (contentBuilder_ == null) {
          result.content_ = content_;
        } else {
          result.content_ = contentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem) {
          return mergeFrom((com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem other) {
        if (other == com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem.getDefaultInstance()) return this;
        if (other.hasPrevItemKey()) {
          setPrevItemKey(other.getPrevItemKey());
        }
        if (other.hasNextItemKey()) {
          setNextItemKey(other.getNextItemKey());
        }
        if (other.hasContent()) {
          mergeContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPrevItemKey()) {
          
          return false;
        }
        if (!hasNextItemKey()) {
          
          return false;
        }
        if (!hasContent()) {
          
          return false;
        }
        if (!getContent().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              prevItemKey_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              nextItemKey_ = input.readBytes();
              break;
            }
            case 26: {
              com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.Builder subBuilder = com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.newBuilder();
              if (hasContent()) {
                subBuilder.mergeFrom(getContent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContent(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string prevItemKey = 1;
      private java.lang.Object prevItemKey_ = "";
      public boolean hasPrevItemKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPrevItemKey() {
        java.lang.Object ref = prevItemKey_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          prevItemKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPrevItemKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        prevItemKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrevItemKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        prevItemKey_ = getDefaultInstance().getPrevItemKey();
        onChanged();
        return this;
      }
      void setPrevItemKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        prevItemKey_ = value;
        onChanged();
      }
      
      // required string nextItemKey = 2;
      private java.lang.Object nextItemKey_ = "";
      public boolean hasNextItemKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNextItemKey() {
        java.lang.Object ref = nextItemKey_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          nextItemKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNextItemKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nextItemKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearNextItemKey() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nextItemKey_ = getDefaultInstance().getNextItemKey();
        onChanged();
        return this;
      }
      void setNextItemKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        nextItemKey_ = value;
        onChanged();
      }
      
      // required .MemcachedLinkedListItemByteArray content = 3;
      private com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray content_ = com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray, com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.Builder, com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArrayOrBuilder> contentBuilder_;
      public boolean hasContent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray getContent() {
        if (contentBuilder_ == null) {
          return content_;
        } else {
          return contentBuilder_.getMessage();
        }
      }
      public Builder setContent(com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          content_ = value;
          onChanged();
        } else {
          contentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setContent(
          com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.Builder builderForValue) {
        if (contentBuilder_ == null) {
          content_ = builderForValue.build();
          onChanged();
        } else {
          contentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeContent(com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray value) {
        if (contentBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              content_ != com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDefaultInstance()) {
            content_ =
              com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.newBuilder(content_).mergeFrom(value).buildPartial();
          } else {
            content_ = value;
          }
          onChanged();
        } else {
          contentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearContent() {
        if (contentBuilder_ == null) {
          content_ = com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDefaultInstance();
          onChanged();
        } else {
          contentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.Builder getContentBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getContentFieldBuilder().getBuilder();
      }
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArrayOrBuilder getContentOrBuilder() {
        if (contentBuilder_ != null) {
          return contentBuilder_.getMessageOrBuilder();
        } else {
          return content_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray, com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.Builder, com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArrayOrBuilder> 
          getContentFieldBuilder() {
        if (contentBuilder_ == null) {
          contentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray, com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.Builder, com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArrayOrBuilder>(
                  content_,
                  getParentForChildren(),
                  isClean());
          content_ = null;
        }
        return contentBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:MemcachedLinkedListItem)
    }
    
    static {
      defaultInstance = new MemcachedLinkedListItem(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MemcachedLinkedListItem)
  }
  
  public interface MemcachedLinkedListItemByteArrayOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required bytes byte = 1;
    boolean hasByte();
    com.google.protobuf.ByteString getByte();
  }
  public static final class MemcachedLinkedListItemByteArray extends
      com.google.protobuf.GeneratedMessage
      implements MemcachedLinkedListItemByteArrayOrBuilder {
    // Use MemcachedLinkedListItemByteArray.newBuilder() to construct.
    private MemcachedLinkedListItemByteArray(Builder builder) {
      super(builder);
    }
    private MemcachedLinkedListItemByteArray(boolean noInit) {}
    
    private static final MemcachedLinkedListItemByteArray defaultInstance;
    public static MemcachedLinkedListItemByteArray getDefaultInstance() {
      return defaultInstance;
    }
    
    public MemcachedLinkedListItemByteArray getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItemByteArray_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItemByteArray_fieldAccessorTable;
    }
    
    private int bitField0_;
    // required bytes byte = 1;
    public static final int BYTE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString byte_;
    public boolean hasByte() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getByte() {
      return byte_;
    }
    
    private void initFields() {
      byte_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasByte()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, byte_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, byte_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArrayOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItemByteArray_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.internal_static_MemcachedLinkedListItemByteArray_fieldAccessorTable;
      }
      
      // Construct using com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        byte_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDescriptor();
      }
      
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray getDefaultInstanceForType() {
        return com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDefaultInstance();
      }
      
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray build() {
        com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray buildPartial() {
        com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray result = new com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.byte_ = byte_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray) {
          return mergeFrom((com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray other) {
        if (other == com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.getDefaultInstance()) return this;
        if (other.hasByte()) {
          setByte(other.getByte());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasByte()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              byte_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required bytes byte = 1;
      private com.google.protobuf.ByteString byte_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasByte() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getByte() {
        return byte_;
      }
      public Builder setByte(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        byte_ = value;
        onChanged();
        return this;
      }
      public Builder clearByte() {
        bitField0_ = (bitField0_ & ~0x00000001);
        byte_ = getDefaultInstance().getByte();
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MemcachedLinkedListItemByteArray)
    }
    
    static {
      defaultInstance = new MemcachedLinkedListItemByteArray(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MemcachedLinkedListItemByteArray)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MemcachedLinkedListItem_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MemcachedLinkedListItem_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MemcachedLinkedListItemByteArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MemcachedLinkedListItemByteArray_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031MemcachedLinkedList.proto\"w\n\027Memcached" +
      "LinkedListItem\022\023\n\013prevItemKey\030\001 \002(\t\022\023\n\013n" +
      "extItemKey\030\002 \002(\t\0222\n\007content\030\003 \002(\0132!.Memc" +
      "achedLinkedListItemByteArray\"0\n Memcache" +
      "dLinkedListItemByteArray\022\014\n\004byte\030\001 \002(\014BO" +
      "\n8com.log4ic.compressor.cache.impl.memca" +
      "ched.util.protobufB\023MemcachedLinkedList"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_MemcachedLinkedListItem_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_MemcachedLinkedListItem_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MemcachedLinkedListItem_descriptor,
              new java.lang.String[] { "PrevItemKey", "NextItemKey", "Content", },
              com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem.class,
              com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItem.Builder.class);
          internal_static_MemcachedLinkedListItemByteArray_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_MemcachedLinkedListItemByteArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MemcachedLinkedListItemByteArray_descriptor,
              new java.lang.String[] { "Byte", },
              com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.class,
              com.log4ic.compressor.cache.impl.memcached.util.protobuf.MemcachedLinkedList.MemcachedLinkedListItemByteArray.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
